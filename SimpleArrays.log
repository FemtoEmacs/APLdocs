This is pdfTeX, Version 3.141592653-2.6-1.40.25 (TeX Live 2023/Debian) (preloaded format=pdflatex 2024.3.4)  4 MAR 2024 10:32
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**SimpleArrays.tex
(./SimpleArrays.tex
LaTeX2e <2023-06-01>
L3 programming layer <2023-06-05>
(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2023/05/17 v1.4n Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2023/05/17 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip48
\belowcaptionskip=\skip49
\bibindent=\dimen140
)
(/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2021/02/14 v1.3d Input encoding file
\inpenc@prehook=\toks17
\inpenc@posthook=\toks18
) (./apl.tex
\charwidth=\skip50
   defining Unicode char U+22C4 (decimal 8900)
   defining Unicode char U+223C (decimal 8764)
   defining Unicode char U+00A8 (decimal 168)
   defining Unicode char U+2336 (decimal 9014)
   defining Unicode char U+00AF (decimal 175)
   defining Unicode char U+236B (decimal 9067)
   defining Unicode char U+2352 (decimal 9042)
   defining Unicode char U+2264 (decimal 8804)
   defining Unicode char U+234B (decimal 9035)
   defining Unicode char U+233D (decimal 9021)
   defining Unicode char U+2265 (decimal 8805)
   defining Unicode char U+2349 (decimal 9033)
   defining Unicode char U+2296 (decimal 8854)
   defining Unicode char U+2260 (decimal 8800)
   defining Unicode char U+235F (decimal 9055)
   defining Unicode char U+2228 (decimal 8744)
   defining Unicode char U+2371 (decimal 9073)
   defining Unicode char U+2227 (decimal 8743)
   defining Unicode char U+2372 (decimal 9074)
   defining Unicode char U+00D7 (decimal 215)
   defining Unicode char U+00F7 (decimal 247)
   defining Unicode char U+2339 (decimal 9017)
   defining Unicode char U+2375 (decimal 9077)
   defining Unicode char U+2208 (decimal 8712)
   defining Unicode char U+2377 (decimal 9079)
   defining Unicode char U+2374 (decimal 9076)
   defining Unicode char U+2191 (decimal 8593)
   defining Unicode char U+2193 (decimal 8595)
   defining Unicode char U+2373 (decimal 9075)
   defining Unicode char U+2378 (decimal 9080)
   defining Unicode char U+25CB (decimal 9675)
   defining Unicode char U+2365 (decimal 9061)
   defining Unicode char U+22C6 (decimal 8902)
   defining Unicode char U+235F (decimal 9055)
   defining Unicode char U+2190 (decimal 8592)
   defining Unicode char U+2192 (decimal 8594)
   defining Unicode char U+2340 (decimal 9024)
   defining Unicode char U+2359 (decimal 9049)
   defining Unicode char U+237A (decimal 9082)
   defining Unicode char U+2296 (decimal 8854)
   defining Unicode char U+2308 (decimal 8968)
   defining Unicode char U+230A (decimal 8970)
   defining Unicode char U+2261 (decimal 8801)
   defining Unicode char U+2207 (decimal 8711)
   defining Unicode char U+2352 (decimal 9042)
   defining Unicode char U+2206 (decimal 8710)
   defining Unicode char U+2218 (decimal 8728)
   defining Unicode char U+2364 (decimal 9060)
   defining Unicode char U+233C (decimal 9020)
   defining Unicode char U+2395 (decimal 9109)
   defining Unicode char U+235E (decimal 9054)
   defining Unicode char U+22A2 (decimal 8866)
   defining Unicode char U+2342 (decimal 9026)
   defining Unicode char U+22A3 (decimal 8867)
   defining Unicode char U+233C (decimal 9020)
   defining Unicode char U+2282 (decimal 8834)
   defining Unicode char U+2283 (decimal 8835)
   defining Unicode char U+2229 (decimal 8745)
   defining Unicode char U+235D (decimal 9053)
   defining Unicode char U+222A (decimal 8746)
   defining Unicode char U+22A5 (decimal 8869)
   defining Unicode char U+234E (decimal 9038)
   defining Unicode char U+22A4 (decimal 8868)
   defining Unicode char U+2355 (decimal 9045)
   defining Unicode char U+2223 (decimal 8739)
   defining Unicode char U+233F (decimal 9023)
   defining Unicode char U+2212 (decimal 8722)
   defining Unicode char U+2262 (decimal 8802)
   defining Unicode char U+220A (decimal 8714)
   defining Unicode char U+2217 (decimal 8727)
)
(/usr/share/texlive/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def
File: l3backend-pdftex.def 2023-04-19 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count193
\l__pdf_internal_box=\box51
)
No file SimpleArrays.aux.
\openout1 = `SimpleArrays.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 4.
LaTeX Font Info:    ... okay on input line 4.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 4.
LaTeX Font Info:    ... okay on input line 4.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 4.
LaTeX Font Info:    ... okay on input line 4.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 4.
LaTeX Font Info:    ... okay on input line 4.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 4.
LaTeX Font Info:    ... okay on input line 4.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 4.
LaTeX Font Info:    ... okay on input line 4.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 4.
LaTeX Font Info:    ... okay on input line 4.
[1

{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 These tutorials are designed not only to familiarize you wit
h the A+[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 language, but to help you adopt the attitude that much can b
e learned[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 entire functions, where you have no clue as to how they work
. Often it[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 is not necessary to know how they work, since you will only 
have to[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 use them as is. And often you will be too busy to figure the
m out at[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 the moment. Even so, you should get in the habit of reservin
g time to[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 work your way through such functions. What you will learn ar
e new ways[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 to say things succinctly, new ways to say things in computat
ionally[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 efficient ways, and - this is rare, of course - some things 
not to do.[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 In that spirit, this tutorial begins with a section on creat
ing test[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 data. The test data created here is fairly simple, because w
e aren't[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 although it may be difficult, and you may learn something ne
w while[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Following the section on test data, there are several illust
rating[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 various things about various A+ primitives. The last section
 presents[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 exercises to work through as you figure out what the express
ions do[] 
 []

[2]
Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 and how they do it. Feel free to create your own test data a
nd explore[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 the boundaries - shape, type, and values - of where the expr
essions[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 correspond to APL\360, which is the common part of all comme
rcial APL[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 systems. Thus, if you have an APL background, this chapter w
ill show[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 although most times the comparisons are left to you to make.
 If you do[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 not have an APL background, the material in this chapter is 
a good[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The exception referred above is the rank operator, which rep
laces the[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 axis operator in APL\360, but is much more general in its ap
plication[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 This tutorial is not meant to be self-contained. You may hav
e to look[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 sections. Also, while many of the test expressions can be ex
ecuted[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 using F2, as described in the Getting Started tutorial, othe
rs must be[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 typed in directly. Moreover, you must type in any test expre
ssions of[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 your own design, and any expressions that create your own te
st data.[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Consequently, you should have a printout of the A+ keyboard 
showing[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 how to type the special graphic characters (see Chapter 2 an
d Appendix[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 In order to experiment with expressions in A+ it is very hel
pful to[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 know how to produce test data, and the primitive functions i
llustrated[] 
 []

[3]
Overfull \hbox (27.74675pt too wide) in paragraph at lines 844--844
[]    \OT1/cmtt/m/n/10 type,  this is, whether the elements are characters, int
egers, etc.[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Not only can the shape of arrays be determined, arrays can r
eshaped[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 section.) And, finally, their elements can be extracted, eit
her one at[] 
 []

[4]
Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The shape of an array x, as evaluated by \apl ^^L\OT1/cmtt/m
/n/10 x, is a vector. It therefore[] 
 []


Overfull \hbox (26.69675pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 has a shape of its own, which is \apl ^^L^^L\OT1/cmtt/m/n/10
 x. \apl ^^L^^L\OT1/cmtt/m/n/10 x is called the rank of x. The[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 rank of x is the number of axes of x. Execute each of the fo
llowing:[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The last example illustrates an array of rank 0, which is ca
lled a[] 
 []

[5]
Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 however, which puts the next prompt two lines down instead o
f one.)   [] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 This tutorial assumes that you are familiar with the idea of
 scalar[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 functions and how they apply to arrays (see the A+ Reference
 Manual or[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The complementary notions of leading axis and items are impo
rtant in[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 structural function is one that rearranges the elements of a
rrays, but[] 
 []


Overfull \hbox (7.79692pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 does not change their values. For example, 10\apl #\OT1/cmtt
/m/n/10 x is not a structural[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 function because it multiplies the values of the elements of
 x by 10.)[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The leading axis of an array in the first one indexed. For e
xample, in[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 a[i;j;k] the leading axis is the one indexed by i; in b[n;m]
 it is the[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 one indexed by n; in c[v] it is the only axis. The items of 
an array[] 
 []

[6]
Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 special, bracket notation for producing them, no matter what
 their[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Most A+ structural primitive functions apply along the leadi
ng axes of[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 their right arguments and rearrange the items of that argume
nt. The[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 these primitive functions. Bring them into the A+ session wi
th F2.[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 positive left argument n, the result is the first n items of
 the right[] 
 []


Overfull \hbox (13.04688pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Since \apl ^ \OT1/cmtt/m/n/10 is defined in terms of the ite
ms of the right argument, what[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 do  expect 3\apl ^\OT1/cmtt/m/n/10 m to be? Confirm your gue
ss by evaluating the expression.[] 
 []


Overfull \hbox (19.34682pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 2. Experiment with n\apl ^\OT1/cmtt/m/n/10 v and n\apl ^\
OT1/cmtt/m/n/10 m when n is greater than 10. Describe[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 what you see in terms of items. Will this be true for charac
ter arrays[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 3. When n is negative, n\apl ^\OT1/cmtt/m/n/10 a is the l
ast -n items of a.  For example,[] 
 []

[7]
Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 5. 0\apl ^\OT1/cmtt/m/n/10 a is an empty array, and conse
quently you cannot learn much by[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 relative to its type  and shape. Use the above test data and
 create[] 
 []


Overfull \hbox (8.84691pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Describe what you see, and in  particular describe \apl ^^L\
OT1/cmtt/m/n/10 0\apl ^\OT1/cmtt/m/n/10 a in terms of[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 positive left argument n, the result is all but first n item
s of the[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 right argument.  Both its symbol and definition suggest that
 it is a[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 complementary function  to take. Rephrase Ex 1 - Ex 4 for dr
op and[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 7. Ex 5 deals with 0\apl ^\OT1/cmtt/m/n/10 a. Without tes
ting it, describe what you think[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 10. Look up the definitions of replicate and expand, rota
te and[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 reverse. Be sure you understand how they apply to the items 
of their[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 right arguments  (or, in the case of reverse, to its only ar
gument.)[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 interesting special case when one argument has rank one less
 than that[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 of the other one: the argument of lesser rank must have the 
same shape[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 argument of smaller rank is a. Then the definitions of both 
a,b and[] 
 []


Overfull \hbox (19.34682pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 b,a are reduced to the equal rank case by  replacing a with 
(1,\apl ^^L\OT1/cmtt/m/n/10 a)\apl ^^L\OT1/cmtt/m/n/10 a.[] 
 []


Overfull \hbox (18.29683pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 12. The primitive function called laminate, which is deno
ted by \apl ^^V\OT1/cmtt/m/n/10 ,[] 
 []

[8]
Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 is an  interesting variation in the way it uses the concept 
of items.[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Namely, it  is dyadic and applies to arrays with the same sh
ape. It[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 When one of the arguments is a scalar, that argument is resh
aped to[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Test this primitive with other arrays. Try to answer the fol
lowing[] 
 []


Overfull \hbox (13.04688pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 little  puzzle: for which arrays x and y are the results x,y
 and x\apl ^^V\OT1/cmtt/m/n/10 y[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 identical?  When you find the answer, you will have found th
e case[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 where the general  definition of catenate based on items bre
aks down.[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Reduction is an example of a mathematical entity called an o
perator,[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 and  it is called an operator in A+ as well. The operator is
 denoted[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 by /, and  it applies to certain scalar functions to produce
 a new[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 function, called  a derived function. For example, +/ is the
 derived[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 function for + and is  called + reduction, or summation. If 
v is a[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 numeric vector then +/v sums the items of v. E.g., +/3 5 7 i
s 15. That[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 This definition holds for v of any rank because v[i] denotes
 the ith[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Scan is also an operator. For example, +\ is the derived fun
ction for[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 + and is called partial sums. If v is a numeric vector then 
+\v is the[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 13. Make sure you understand that reduction and scan appl
y to the[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 items of  arrays. Test your understanding with matrices and 
arrays of[] 
 []

[9]
Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Frames and cells are a more general way of partitioning arra
ys than[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The axis indexed by i is called the leading axis. If i is a 
scalar,[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 the subarrays a[i;;], or equivalently a[i], are the items of
 a. In[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 terms of frames and cells, the leading axis is the frame of 
rank 1 and[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Similarly, the first two axes are the frame of rank 2. If bo
th i and j[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 are scalars then the subarrays a[i;j;], or equivalently a[i;
j], are[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The rank of the frame plus the rank of the cells within that
 frame[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 equals the rank of the array. Instead of always referring ex
plicitly[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 to the rank of the frame and the rank of the cells, it is so
metimes[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 convenient to refer to "the frame for the cells of rank n", 
or the[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The concepts of frame and cells are useful in explaining sev
eral A+[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 primitives. We will look at these primitives before the main
 topic of[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 In its simplest form, where the arguments are scalars or vec
tors, the[] 
 []

[10]
Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 result of Member Of is a boolean vector where 1's mark the e
lements of[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 denote the rank of the items of the right argument x, and le
t S denote[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 their shape. Then the left argument y must have rank at leas
t N, and[] 
 []


Overfull \hbox (2.54697pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 the N cells of y must have shape S. If so, y\apl ^^F\OT1/cmt
t/m/n/10 x is defined and is a[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 boolean array; its shape equals the shape of the frame for t
he cells[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 of rank N; and an element of the result is 1 if the correspo
nding cell[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 14. Let's see if we understand the definition of Member O
f. Define[] 
 []


Overfull \hbox (8.84691pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 relevant to y\apl ^^F\OT1/cmtt/m/n/10 x are just the items o
f y. Before evaluating y\apl ^^F\OT1/cmtt/m/n/10 x, can[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 you predict the rank of the result? The shape? The value? Ev
aluate y\apl ^^F\OT1/cmtt/m/n/10 x[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Now, what is the rank of the cells of y that are relevant to
 y\apl ^^F\OT1/cmtt/m/n/10 x. What[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 is rank of the frame that holds these cells? What is the sha
pe of the[] 
 []


Overfull \hbox (18.29683pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 17. Index of is similar to Member Of. It is denoted y\apl
 ^^M\OT1/cmtt/m/n/10 x. There are[] 
 []

[11]
Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 two basic differences in the definitions. One, the roles of 
the left[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 argument and right argument are interchanged from those of M
ember Of.[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 items of the right. In Index Of, however, cells of the right
 argument[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 are compared to items of the left. The second difference is 
that the[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 corresponding element of the result is the index of that ite
m; if it[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 matches more than one item, the element is the smallest inde
x among[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 those it matches; if there is no match, the element is the n
umber of[] 
 []


Overfull \hbox (18.29683pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 18.  Form x and y as in Ex 13. Describe the result of x\a
pl ^^M\OT1/cmtt/m/n/10 y in terms[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 By now you should appreciate the uniformity with which many 
of the A+[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 primitive functions apply to the items of their arguments. Y
ou may[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 also be wondering whether or not this is too restrictive. Fo
r example,[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 what does one do to catenate one matrix to another row-by-ro
w, instead[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The definition of the rank operator is based on the concepts
 of frames[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 and cells, which were just introduced. In effect, the rank o
perator[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 specifies the rank of the cells to which a monadic function 
is to be[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 21. One of the easiest ways to see how the rank operator 
applies is[] 
 []

[12]
Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The result shows that the leading axis disappears; it is the
 axis over[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The expression +/@ 1 means that reduction will be applied to
 cells of[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 rank 1 of the array \apl ^^M\OT1/cmtt/m/n/10 3 5 8. (The par
entheses around +/@ 1 in the above[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 expression are not necessary, but have been included for emp
hasis.)[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The cells of rank 1 are vectors along the  last axis. The la
st result[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 shows that the last axis is the one over which the  reductio
n took[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Now here is the challenge: execute the following and explain
 what you[] 
 []


Overfull \hbox (3.59695pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Here are two more challenges: compare \apl ^^M\OT1/cmtt/m/n/
10 3 5 8 and (+/@ 0)\apl ^^M\OT1/cmtt/m/n/10 3 5 8 and[] 
 []


Overfull \hbox (14.09686pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 explain what you see; compare +/\apl ^^M\OT1/cmtt/m/n/10 3 5
 8 and (+/@ 3)\apl ^^M\OT1/cmtt/m/n/10 3 5 8 and explain[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 22. In the rank operator we specify the function to be ap
plied and[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 expresses the catenation of the rank 1 cells of a to the ran
k 0 cells[] 
 []

[13]
Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Evaluate a(,@1 1)c and explain what you see in terms of the 
rule of[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 23. For each of the following expressions explain what yo
u think[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Consult the A+ Reference Manual regarding 3-element data ope
rands and[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The purpose of this section is to illustrate the expressiven
ess of A+[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 expressions you come across in order to understand them. Mos
t topics[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 subsection called Example(s). Use F2 to first bring in the t
est data,[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 and then go back to the expressions themselves and apply F2 
to them to[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 8a. A To B  Make a vector of integers from a to b, where a i
s less[] 
 []

[14]
Overfull \hbox (19.34682pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 25. Repeat using absolute value (monadic \apl |\OT1/cmtt/
m/n/10 ) and signum (monadic \apl #\OT1/cmtt/m/n/10 )[] 
 []


Overfull \hbox (24.59677pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 example, [].+ is the outer product of +. It is a dyadic func
tion. x[].+y[] 
 []


Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 26. Execute the above expressions for the test data and e
xplain[] 
 []


Overfull \hbox (19.34682pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 28. The key here is the expression (v\apl ^^M\OT1/cmtt/m/
n/10 v)=\apl ^^M\OT1/cmtt/m/n/10 #v. To understand what's[] 
 []


Overfull \hbox (14.09686pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 going on, execute v\apl ^^M\OT1/cmtt/m/n/10 v and \apl ^^M\O
T1/cmtt/m/n/10 #v separately so that their elements line[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 up. Explain how duplicates can be identified by examining th
ese two[] 
 []

[15]
Overfull \hbox (8.84691pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 30. Experiment with d\apl ^\OT1/cmtt/m/n/10 a vs. d(\apl 
^\OT1/cmtt/m/n/10 @0 1)a. Describe the differences.[] 
 []


Overfull \hbox (13.04688pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 The symbol @ denotes the Rank operator. The notation \apl ^\
OT1/cmtt/m/n/10 @0 1 signifies[] 
 []


Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 "the rank of \apl ^ \OT1/cmtt/m/n/10 applied to scalar (rank
 0) items on the left and vector[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 31. Modify the expressions in this section to apply to a 
matrix b?[] 
 []


Overfull \hbox (24.59677pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 33. Experiment with the boolean expression \apl ^^H\OT1/c
mtt/m/n/10 \v\apl ^^W\OT1/cmtt/m/n/10 ' ' and describe its[] 
 []

[16]
Overfull \hbox (23.54678pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 34. Experiment with the boolean expression \apl &\OT1/cmt
t/m/n/10 \v=' ' and describe its[] 
 []


Overfull \hbox (20.3968pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 35. Use rotate (monadic \apl ^^O |\OT1/cmtt/m/n/10 ) to m
odify the expression (\apl ^^H\OT1/cmtt/m/n/10 \v\apl ^^W\OT1/cmtt/m/n/10 ' ')/
v so[] 
 []


Overfull \hbox (16.19684pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 38. Examine the boolean expression (1\apl ^^_\OT1/cmtt/m/
n/10 z)\apl ^^H^^U\OT1/cmtt/m/n/10 1\apl ^^_\OT1/cmtt/m/n/10 z by first evaluat
ing[] 
 []


Overfull \hbox (15.14685pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 1\apl ^^_\OT1/cmtt/m/n/10 z and  then \apl ^^U\OT1/cmtt/m/n/
10 1\apl ^^_\OT1/cmtt/m/n/10 z. Their elements should line up in the display, s
o[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 that you can compare them quite easily. Explain how this exp
ression[] 
 []

[17]
Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 41. Test these expressions for the sample data. If the ex
pression[] 
 []


Overfull \hbox (13.04688pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 expression using monadic transpose (\apl ^^O \\OT1/cmtt/m/n/
10 ) (see the A+ Reference Manual)[] 
 []

[18]
Overfull \hbox (1.49698pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 Ex 45. Here is a challenge for using the rank operator. Inst
ead of[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 defining the function f above and applying the rank operator
 to it,[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 figure out how to apply the rank operator to the primitive f
unctions[] 
 []


Overfull \hbox (4.64694pt too wide) in paragraph at lines 844--844
[]\OT1/cmtt/m/n/10 in the expression  ((m\apl ^^W\OT1/cmtt/m/n/10 ' ')\apl ^^M\
OT1/cmtt/m/n/10 1)\apl ^^O |\OT1/cmtt/m/n/10 m, so that the result justifies th
e[] 
 []

[19] (./SimpleArrays.aux)
 ***********
LaTeX2e <2023-06-01>
L3 programming layer <2023-06-05>
 ***********
 ) 
Here is how much of TeX's memory you used:
 603 strings out of 477695
 9550 string characters out of 5831649
 1863759 words of memory out of 5000000
 21170 multiletter control sequences out of 15000+600000
 513722 words of font info for 36 fonts, out of 8000000 for 9000
 14 hyphenation exceptions out of 8191
 35i,5n,50p,158b,271s stack positions out of 10000i,1000n,20000p,200000b,200000s
 </home/scm/apl/apldocs/cmapl10.720pk></usr/share/texlive/texmf-dist/fonts/ty
pe1/public/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type1/pub
lic/amsfonts/cm/cmtt10.pfb>
Output written on SimpleArrays.pdf (19 pages, 61303 bytes).
PDF statistics:
 102 PDF objects out of 1000 (max. 8388607)
 54 compressed objects within 1 object stream
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

